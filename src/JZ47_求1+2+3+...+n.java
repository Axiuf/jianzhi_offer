/*
    这道题目的解法的关键是短路求值。
    首先题目本身十分简单，就是一个简单的累加，但是要求不能使用加减乘除以及逻辑判断的关键字等等。
    这样一来，我本来首先想到的是位运算。n = (1 + n) * n / 2 这个算式中只有乘n不太好转换为位运算。这时我原本想的是
    把n分解为2的递增次幂的多项式的形式，这样就可以用几个位运算的累加来求值，但是卡在如何转换为多项式的方法这里，似乎
    是必须要用到循环和判断的条件（不然就像有的回答里面做的那种样子，按照最大的2的次幂依次做下来。

    看到题解后，是用短路求值规避了递归算法的终值判断。这个点破了就没啥好说的了。
 */

public class Solution {
    public int Sum_Solution(int n) {
        int sum = 1;
        boolean x = (n > 1) && (sum = Sum_Solution(n-1) + n) > 0;
        return sum;
    }
}